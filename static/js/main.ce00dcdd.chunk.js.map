{"version":3,"sources":["components/Page/Page.tsx","components/Pagination/Pagination.tsx","stores/pages-store.ts","helpers/api.ts","App.tsx","index.tsx"],"names":["Page","observer","page","selectPage","id","name","isActive","display","className","cn","Page_active","Page_display","onClick","aria-hidden","Pagination","inject","pagesStore","useEffect","getPages","type","pages","map","key","onChange","inView","hiddenPage","configure","enforceActions","PagesStore","a","fetch","then","response","json","pagesFromServer","preparedPages","idx","runInAction","this","bool","console","log","find","decorate","observable","action","bound","stores","App","Root","ReactDOM","render","document","getElementById"],"mappings":"+WA4BeA,G,MAlBgBC,aAAS,YAA2B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACvCC,EAAgCF,EAAhCE,GAAIC,EAA4BH,EAA5BG,KAAMC,EAAsBJ,EAAtBI,SAAUC,EAAYL,EAAZK,QAE5B,OACE,wBACEC,UAAWC,IAAG,CACZT,MAAM,EACNU,YAAaJ,EACbK,cAAeJ,IAEjBK,QAAS,kBAAMT,EAAWC,IAC1BS,cAAY,QAEXR,OCcQS,EA/BIC,YAAO,aAAPA,CAAqBd,aAAS,YAE3C,IADFe,EACC,EADDA,WAMF,OAJAC,qBAAU,WACRD,EAAWE,aACV,IAGD,yBAAKV,UAAU,cACb,4BAAQA,UAAU,iBAAiBW,KAAK,UAAxC,UACA,wBAAIX,UAAU,mBACXQ,EAAWI,MAAMC,KAAI,SAACnB,GAAD,OACpB,kBAAC,WAAD,CAAUoB,IAAKpB,EAAKE,IAClB,kBAAC,EAAD,CACEF,KAAMA,EACNC,WAAY,kBAAMa,EAAWb,WAAWD,EAAKE,OAE/C,kBAAC,IAAD,CACEI,UAAU,kBACVe,SAAU,SAACC,GAAD,OAAYR,EAAWS,WAAWD,EAAQtB,EAAKE,MAExD,WAKT,4BAAQI,UAAU,iBAAiBW,KAAK,UAAxC,e,uDC7BNO,YAAU,CAAEC,eAAgB,a,IAEtBC,E,4DACJR,MAAiB,G,KAEjBF,S,sBAAW,8BAAAW,EAAA,sECLJC,MAHG,gEAIPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDIlB,OACHC,EADG,OAGHC,EAAgBD,EACnBb,KAAI,SAACnB,EAAckC,GAAf,MAAgC,CACnChC,GAAIgC,EACJ/B,KAAMH,EACNI,UAAU,EACVC,SAAS,MAGb8B,aAAY,WACV,EAAKjB,MAAQe,KAZN,2C,uDAgBA/B,GACT,IAAIkC,KAAKlB,MAAMhB,GAAIE,SAAnB,CAIA,IAAMc,EAAQkB,KAAKlB,MAAMC,KAAI,SAAAnB,GAAI,OAC/BA,EAAKE,KAAOA,EAAZ,2BACSF,GADT,IACeI,UAAU,IADzB,2BAESJ,GAFT,IAEeI,UAAU,OAG3BgC,KAAKlB,MAAQA,K,iCAGJmB,EAAenC,GACxB,IAAImC,EAKF,GAFAC,QAAQC,IAAIH,KAAKlB,MAAMhB,GAAIE,UAEvBgC,KAAKlB,MAAMhB,GAAIE,SAAU,CAAC,IAAD,EACrB8B,GAAc,UAAAE,KAAKlB,MAAMsB,MAAK,SAAAxC,GAAI,OACtCA,EAAKK,UAAYL,EAAKI,mBADJ,eAEhBF,KAAM,EAEVkC,KAAKlB,MAAMgB,GAAK7B,SAAU,OAE1B+B,KAAKlB,MAAMhB,GAAIG,SAAU,M,KAMjCoC,YAASf,EAAY,CACnBR,MAAOwB,IACP1B,SAAU2B,IAAOC,MACjB3C,WAAY0C,IACZpB,WAAYoB,MAGd,IAEe7B,EAFI,IAAIY,EE1DjBmB,G,MAAS,CAAE/B,eAYFgC,EAVH,WACV,OACE,kBAAC,IAAaD,EACZ,yBAAKvC,UAAU,OACb,kBAAC,EAAD,SCHFyC,EAAO,kBACX,kBAAC,IAAD,KACE,kBAAC,EAAD,QAIJC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.ce00dcdd.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport './Page.scss';\nimport { observer } from 'mobx-react';\n\ntype Props = {\n  page: IPage;\n  selectPage: (id: number) => void;\n};\n\nconst Page: React.FC<Props> = (observer(({ page, selectPage }) => {\n  const { id, name, isActive, display } = page;\n\n  return (\n    <li\n      className={cn({\n        Page: true,\n        Page_active: isActive,\n        Page_display: !display,\n      })}\n      onClick={() => selectPage(id)}\n      aria-hidden=\"true\"\n    >\n      {name}\n    </li>\n  );\n}));\n\nexport default Page;\n","import React, { useEffect, Fragment } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { InView } from 'react-intersection-observer';\nimport './Pagination.scss';\nimport Page from '../Page';\n\nconst Pagination = inject('pagesStore')(observer((\n  { pagesStore }: any,\n) => {\n  useEffect(() => {\n    pagesStore.getPages();\n  }, []);\n\n  return (\n    <div className=\"Pagination\">\n      <button className=\"Pagination-Btn\" type=\"button\">⮜</button>\n      <ul className=\"Pagination-List\">\n        {pagesStore.pages.map((page: IPage) => (\n          <Fragment key={page.id}>\n            <Page\n              page={page}\n              selectPage={() => pagesStore.selectPage(page.id)}\n            />\n            <InView\n              className=\"Pagination-Plug\"\n              onChange={(inView) => pagesStore.hiddenPage(inView, page.id)}\n            >\n              {null}\n            </InView>\n          </Fragment>\n        ))}\n      </ul>\n      <button className=\"Pagination-Btn\" type=\"button\">⮞</button>\n    </div>\n  );\n}));\n\nexport default Pagination;\n","import { decorate, observable, configure, action, runInAction } from 'mobx';\nimport { getData } from '../helpers/api';\n\nconfigure({ enforceActions: 'observed' });\n\nclass PagesStore {\n  pages: IPage[] = [];\n\n  getPages = async () => {\n    const pagesFromServer = await getData<string>();\n\n    const preparedPages = pagesFromServer\n      .map((page: string, idx: number) => ({\n        id: idx,\n        name: page,\n        isActive: false,\n        display: true,\n      }));\n\n    runInAction(() => {\n      this.pages = preparedPages;\n    });\n  };\n\n  selectPage(id: number) {\n    if (this.pages[id].isActive) {\n      return;\n    }\n\n    const pages = this.pages.map(page => (\n      page.id === id\n        ? { ...page, isActive: true }\n        : { ...page, isActive: false }\n    ));\n\n    this.pages = pages;\n  }\n\n  hiddenPage(bool: boolean, id: number) {\n    if (bool) {\n      return;\n    } else {\n      console.log(this.pages[id].isActive);\n\n      if (this.pages[id].isActive) {\n        const idx: number = this.pages.find(page => (\n          page.display && !page.isActive\n        ))?.id || 0;\n\n        this.pages[idx].display = false;\n      } else {\n        this.pages[id].display = false;\n      }\n    }\n  }\n}\n\ndecorate(PagesStore, {\n  pages: observable,\n  getPages: action.bound,\n  selectPage: action,\n  hiddenPage: action,\n});\n\nconst pagesStore = new PagesStore();\n\nexport default pagesStore;\n","const URL = 'https://andreas-just.github.io/test_JD-gaming/api/pages.json';\n\nexport const getData = <T>(): Promise<T[]> => {\n  return fetch(URL)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport Pagination from './components/Pagination';\nimport pagesStore from './stores/pages-store';\nimport './App.scss';\n\nconst stores = { pagesStore };\n\nconst App = () => {\n  return (\n    <Provider {...stores}>\n      <div className=\"App\">\n        <Pagination />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\n// import 'semantic-ui-css/semantic.min.css';\nimport './assets/scss/index.scss';\n\nimport App from './App';\n\nconst Root = () => (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}