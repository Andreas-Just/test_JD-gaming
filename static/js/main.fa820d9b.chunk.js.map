{"version":3,"sources":["components/Page/Page.tsx","components/Pagination/Pagination.tsx","stores/pages-store.ts","helpers/api.ts","App.tsx","index.tsx"],"names":["Page","observer","page","pagesStore","id","name","isActive","display","useInView","threshold","ref","inView","entry","useEffect","hiddenPage","className","cn","Page_active","Page_display","onClick","selectPage","aria-hidden","Pagination","inject","getPages","type","pages","map","key","configure","enforceActions","PagesStore","a","fetch","then","response","json","pagesFromServer","preparedPages","idx","runInAction","this","find","decorate","observable","action","bound","stores","App","Root","ReactDOM","render","document","getElementById"],"mappings":"+XAuCeA,EA5BgBC,aAAS,YAA2B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACvCC,EAAgCF,EAAhCE,GAAIC,EAA4BH,EAA5BG,KAAMC,EAAsBJ,EAAtBI,SAAUC,EAAYL,EAAZK,QADoC,EAEnCC,YAAU,CACrCC,UAAW,IAHmD,mBAEzDC,EAFyD,KAEpDC,EAFoD,KAE5CC,EAF4C,KAYhE,OANAC,qBAAU,WACJD,GACFT,EAAWW,WAAWH,EAAQT,EAAKE,MAEpC,CAACO,EAAQT,EAAMU,IAGhB,wBACEG,UAAWC,IAAG,CACZhB,MAAM,EACNiB,YAAaX,EACbY,cAAeX,IAEjBY,QAAS,kBAAMhB,EAAWiB,WAAWhB,IACrCiB,cAAY,OACZX,IAAKA,GAEJL,MCLQiB,EAxBIC,YAAO,aAAPA,CAAqBtB,aAAS,YAE3C,IADFE,EACC,EADDA,WAMF,OAJAU,qBAAU,WACRV,EAAWqB,aACV,IAGD,yBAAKT,UAAU,cACb,4BAAQA,UAAU,iBAAiBU,KAAK,UAAxC,UACA,wBAAIV,UAAU,mBACXZ,EAAWuB,MAAMC,KAAI,SAACzB,GAAD,OACpB,kBAAC,EAAD,CACE0B,IAAK1B,EAAKE,GACVF,KAAMA,EACNC,WAAYA,QAIlB,4BAAQY,UAAU,iBAAiBU,KAAK,UAAxC,e,uDCrBNI,YAAU,CAAEC,eAAgB,a,IAEtBC,E,4DACJL,MAAiB,G,KAEjBF,S,sBAAW,8BAAAQ,EAAA,sECLJC,MAHG,gEAIPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDIlB,OACHC,EADG,OAGHC,EAAgBD,EACnBV,KAAI,SAACzB,EAAcqC,GAAf,MAAgC,CACnCnC,GAAImC,EACJlC,KAAMH,EACNI,UAAU,EACVC,SAAS,MAGbiC,aAAY,WACV,EAAKd,MAAQY,KAZN,2C,uDAgBAlC,GACT,IAAIqC,KAAKf,MAAMtB,GAAIE,SAAnB,CAIA,IAAMoB,EAAQe,KAAKf,MAAMC,KAAI,SAAAzB,GAAI,OAC/BA,EAAKE,KAAOA,EAAZ,2BACSF,GADT,IACeI,UAAU,IADzB,2BAESJ,GAFT,IAEeI,UAAU,OAG3BmC,KAAKf,MAAQA,K,iCAGJf,EAAiBP,GAC1B,GAAIO,EACF8B,KAAKf,MAAMtB,GAAIG,SAAU,OACpB,GAAIkC,KAAKf,MAAMtB,GAAIE,SAAU,CAAC,IAAD,EAC5BiC,GAA0B,UAAAE,KAAKf,MAAMgB,MAAK,SAAAxC,GAAI,OAClDA,EAAKK,UAAYL,EAAKI,mBADQ,eAE5BF,KAAM,EAEVqC,KAAKf,MAAMa,GAAKhC,SAAU,OAE1BkC,KAAKf,MAAMtB,GAAIG,SAAU,M,KAK/BoC,YAASZ,EAAY,CACnBL,MAAOkB,IACPpB,SAAUqB,IAAOC,MACjB1B,WAAYyB,IACZ/B,WAAY+B,MAGd,IAEe1C,EAFI,IAAI4B,EEtDjBgB,G,MAAS,CAAE5C,eAYF6C,EAVH,WACV,OACE,kBAAC,IAAaD,EACZ,yBAAKhC,UAAU,OACb,kBAAC,EAAD,SCHFkC,EAAO,kBACX,kBAAC,IAAD,KACE,kBAAC,EAAD,QAIJC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.fa820d9b.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport cn from 'classnames';\nimport './Page.scss';\nimport { observer } from 'mobx-react';\nimport { useInView } from 'react-intersection-observer'\n\ntype Props = {\n  page: IPage;\n  pagesStore: any;\n};\n\nconst Page: React.FC<Props> = (observer(({ page, pagesStore }) => {\n  const { id, name, isActive, display } = page;\n  const [ref, inView, entry] = useInView({\n    threshold: 1,\n  });\n\n  useEffect(() => {\n    if (entry) {\n      pagesStore.hiddenPage(inView, page.id);\n    }\n  }, [inView, page, entry]);\n\n  return (\n    <li\n      className={cn({\n        Page: true,\n        Page_active: isActive,\n        Page_display: !display,\n      })}\n      onClick={() => pagesStore.selectPage(id)}\n      aria-hidden=\"true\"\n      ref={ref}\n    >\n      {name}\n    </li>\n  );\n}));\n\nexport default Page;\n","import React, { useEffect } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport './Pagination.scss';\nimport Page from '../Page';\n\nconst Pagination = inject('pagesStore')(observer((\n  { pagesStore }: any,\n) => {\n  useEffect(() => {\n    pagesStore.getPages();\n  }, []);\n\n  return (\n    <div className=\"Pagination\">\n      <button className=\"Pagination-Btn\" type=\"button\">⮜</button>\n      <ul className=\"Pagination-List\">\n        {pagesStore.pages.map((page: IPage) => (\n          <Page\n            key={page.id}\n            page={page}\n            pagesStore={pagesStore}\n          />\n        ))}\n      </ul>\n      <button className=\"Pagination-Btn\" type=\"button\">⮞</button>\n    </div>\n  );\n}));\n\nexport default Pagination;\n","import { decorate, observable, configure, action, runInAction } from 'mobx';\nimport { getData } from '../helpers/api';\n\nconfigure({ enforceActions: 'observed' });\n\nclass PagesStore {\n  pages: IPage[] = [];\n\n  getPages = async () => {\n    const pagesFromServer = await getData<string>();\n\n    const preparedPages = pagesFromServer\n      .map((page: string, idx: number) => ({\n        id: idx,\n        name: page,\n        isActive: false,\n        display: true,\n      }));\n\n    runInAction(() => {\n      this.pages = preparedPages;\n    });\n  };\n\n  selectPage(id: number) {\n    if (this.pages[id].isActive) {\n      return;\n    }\n\n    const pages = this.pages.map(page => (\n      page.id === id\n        ? { ...page, isActive: true }\n        : { ...page, isActive: false }\n    ));\n\n    this.pages = pages;\n  }\n\n  hiddenPage(inView: boolean, id: number) {\n    if (inView) {\n      this.pages[id].display = true; // ??\n    } else if (this.pages[id].isActive) {\n      const idx: number | undefined = this.pages.find(page => (\n        page.display && !page.isActive\n      ))?.id || 0;\n\n      this.pages[idx].display = false;\n    } else {\n      this.pages[id].display = false;\n    }\n  }\n}\n\ndecorate(PagesStore, {\n  pages: observable,\n  getPages: action.bound,\n  selectPage: action,\n  hiddenPage: action,\n});\n\nconst pagesStore = new PagesStore();\n\nexport default pagesStore;\n","const URL = 'https://andreas-just.github.io/test_JD-gaming/api/pages.json';\n\nexport const getData = <T>(): Promise<T[]> => {\n  return fetch(URL)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport Pagination from './components/Pagination';\nimport pagesStore from './stores/pages-store';\nimport './App.scss';\n\nconst stores = { pagesStore };\n\nconst App = () => {\n  return (\n    <Provider {...stores}>\n      <div className=\"App\">\n        <Pagination />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\n// import 'semantic-ui-css/semantic.min.css';\nimport './assets/scss/index.scss';\n\nimport App from './App';\n\nconst Root = () => (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}